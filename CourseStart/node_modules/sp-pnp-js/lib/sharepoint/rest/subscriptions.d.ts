/// <reference types="core-js" />
import { Queryable, QueryableCollection, QueryableInstance } from "./queryable";
/**
 * Describes a collection of webhook subscriptions
 *
 */
export declare class Subscriptions extends QueryableCollection {
    /**
     * Creates a new instance of the Subscriptions class
     *
     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection
     */
    constructor(baseUrl: string | Queryable, path?: string);
    /**
     * Returns all the webhook subscriptions or the specified webhook subscription
     *
     */
    getById(subscriptionId: string): Subscription;
    /**
     * Create a new webhook subscription
     *
     */
    add(notificationUrl: string, expirationDate: string, clientState?: string): Promise<SubscriptionAddResult>;
}
/**
 * Describes a single webhook subscription instance
 *
 */
export declare class Subscription extends QueryableInstance {
    /**
     * Creates a new instance of the Subscription class
     *
     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscription instance
     */
    constructor(baseUrl: string | Queryable, path?: string);
    /**
     * Update a webhook subscription
     *
     */
    update(expirationDate: string): Promise<SubscriptionUpdateResult>;
    /**
     * Remove a webhook subscription
     *
     */
    delete(): Promise<void>;
}
export interface SubscriptionAddResult {
    subscription: Subscription;
    data: any;
}
export interface SubscriptionUpdateResult {
    subscription: Subscription;
    data: any;
}
